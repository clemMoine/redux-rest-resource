{"version":3,"sources":["../../src/actions/transform.js"],"names":["buildTransformPipeline","initial","transform","transformResponsePipeline","Array","isArray","applyTransformPipeline","pipeline","reduce","soFar","fn","then","defaultGlobals","Promise","resolve"],"mappings":";;;;;;;AAAA;;;;AAEA,IAAMA,yBAAyB,SAAzBA,sBAAyB,CAACC,OAAD,EAAUC,SAAV,EAAwB;AACrD,MAAIC,kCAAJ;AACA,MAAID,SAAJ,EAAe;AACbC,gCAA4BC,MAAMC,OAAN,CAAcH,SAAd,IAA2BA,SAA3B,gCAA2CD,OAA3C,IAAoDC,SAApD,EAA5B;AACD,GAFD,MAEO;AACLC,6DAAgCF,OAAhC;AACD;AACD,SAAOE,yBAAP;AACD,CARD;AASA,IAAMG,yBAAyB,SAAzBA,sBAAyB;AAAA;AAC7B;AACA;AAAA,aAAWC,SAASC,MAAT,CAAgB,UAACC,KAAD,EAAQC,EAAR;AAAA,eAAeD,MAAME,IAAN,CAAWD,EAAX,CAAf;AAAA,OAAhB,EAA+CE,yBAAeC,OAAf,CAAuBC,OAAvB,CAA+Bb,OAA/B,CAA/C,CAAX;AAAA;AAF6B;AAAA,CAA/B;QAGQD,sB,GAAAA,sB;QAAwBM,sB,GAAAA,sB","file":"transform.js","sourcesContent":["import {defaultGlobals} from './../defaults';\n\nconst buildTransformPipeline = (initial, transform) => {\n  let transformResponsePipeline;\n  if (transform) {\n    transformResponsePipeline = Array.isArray(transform) ? transform : [...initial, transform];\n  } else {\n    transformResponsePipeline = [...initial];\n  }\n  return transformResponsePipeline;\n};\nconst applyTransformPipeline = pipeline =>\n  // eslint-disable-line arrow-body-style\n  initial => pipeline.reduce((soFar, fn) => soFar.then(fn), defaultGlobals.Promise.resolve(initial));\nexport {buildTransformPipeline, applyTransformPipeline};\n"]}