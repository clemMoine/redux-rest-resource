{"version":3,"sources":["../../src/actions/index.js"],"names":["SUPPORTED_FETCH_OPTS","SUPPORTED_REDUCE_OPTS","getActionName","actionId","resourceName","resourcePluralName","isArray","alias","createAction","scope","stripTrailingSlashes","actionOpts","type","context","contextOpts","dispatch","getState","reduceOpts","pick","isPure","status","options","Promise","resolve","fetchOpts","resolvedfetchOpts","Object","keys","reduce","soFar","key","url","eligibleFetchOptions","urlParams","finalFetchUrl","finalFetchOpts","then","defaultTransformResponsePipeline","transformResponse","receivedAt","Date","now","payload","catch","err","statusCode","code","body","createActions","actions","globalOpts","actionKeys","actionFuncs","substr","actionName"],"mappings":"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","file":"index.js","sourcesContent":["// @inspiration https://github.com/angular/angular.js/blob/master/src/ngResource/resource.js\n\nimport {getActionType, getTypesScope, scopeType} from './../types';\nimport {applyTransformPipeline, buildTransformPipeline} from './transform';\nimport {parseUrlParams} from './../helpers/url';\nimport fetch, {buildFetchUrl, buildFetchOpts} from './../helpers/fetch';\nimport {isFunction, isString, pick, ucfirst, getPluralName} from './../helpers/util';\nimport {defaultTransformResponsePipeline} from './../defaults';\n\nconst SUPPORTED_FETCH_OPTS = ['url', 'method', 'headers', 'credentials', 'query', 'body'];\nconst SUPPORTED_REDUCE_OPTS = ['assignResponse', 'isArray', 'isPure'];\n\nconst getActionName = (\n  actionId,\n  {resourceName, resourcePluralName = getPluralName(resourceName), isArray = false, alias} = {}\n) => (!resourceName ? actionId : `${alias || actionId}${ucfirst(isArray ? resourcePluralName : resourceName)}`);\n\nconst createAction = (\n  actionId,\n  {resourceName, resourcePluralName = getPluralName(resourceName), scope, stripTrailingSlashes = true, ...actionOpts}\n) => {\n  const type = scopeType(getActionType(actionId), scope);\n  // Actual action function with two args\n  // Context usage changes with resolved method:\n  // - GET/DELETE will be used to resolve query params (eg. /users/:id)\n  // - POST/PATCH will be used to resolve query params (eg. /users/:id) and as request body\n  return (context, contextOpts = {}) => (dispatch, getState) => {\n    // Prepare reduce options\n    const reduceOpts = {\n      ...pick(actionOpts, ...SUPPORTED_REDUCE_OPTS),\n      ...pick(contextOpts, ...SUPPORTED_REDUCE_OPTS)\n    };\n    // Support pure actions\n    if (actionOpts.isPure) {\n      dispatch({\n        type,\n        status: 'resolved',\n        options: reduceOpts,\n        context\n      });\n      return Promise.resolve();\n    }\n    // First dispatch a pending action\n    dispatch({\n      type,\n      status: 'pending',\n      context\n    });\n    // Prepare fetch options\n    const fetchOpts = {\n      ...pick(actionOpts, ...SUPPORTED_FETCH_OPTS),\n      ...pick(contextOpts, ...SUPPORTED_FETCH_OPTS)\n    };\n    // Support dynamic fetch options\n    const resolvedfetchOpts = Object.keys(fetchOpts).reduce((soFar, key) => {\n      soFar[key] = isFunction(fetchOpts[key])\n        ? fetchOpts[key](getState, {\n            context,\n            contextOpts,\n            actionId\n          })\n        : fetchOpts[key];\n      return soFar;\n    }, {});\n    const {url, ...eligibleFetchOptions} = resolvedfetchOpts;\n    // Build fetch url and options\n    const urlParams = parseUrlParams(url);\n    const finalFetchUrl = buildFetchUrl(context, {\n      url,\n      urlParams,\n      isArray: reduceOpts.isArray,\n      stripTrailingSlashes\n    });\n    const finalFetchOpts = buildFetchOpts(context, eligibleFetchOptions);\n    return fetch(finalFetchUrl, finalFetchOpts)\n      .then(\n        applyTransformPipeline(buildTransformPipeline(defaultTransformResponsePipeline, actionOpts.transformResponse))\n      )\n      .then(payload =>\n        dispatch({\n          type,\n          status: 'resolved',\n          context,\n          options: reduceOpts,\n          receivedAt: Date.now(),\n          ...payload\n        })\n      ) // eslint-disable-line\n      .catch(err => {\n        // Catch HttpErrors\n        if (err.statusCode) {\n          dispatch({\n            type,\n            status: 'rejected',\n            code: err.statusCode,\n            body: err.body,\n            context,\n            options: reduceOpts,\n            receivedAt: Date.now()\n          });\n          // Catch regular Errors\n        } else {\n          dispatch({\n            type,\n            status: 'rejected',\n            err,\n            context,\n            options: reduceOpts,\n            receivedAt: Date.now()\n          });\n        }\n        throw err;\n      });\n  };\n};\n\nconst createActions = (\n  actions = {},\n  {\n    resourceName,\n    resourcePluralName = getPluralName(resourceName),\n    scope = getTypesScope(resourceName),\n    ...globalOpts\n  } = {}\n) => {\n  const actionKeys = Object.keys(actions);\n  return actionKeys.reduce((actionFuncs, actionId) => {\n    // Add support for relative url override\n    const {url} = actions[actionId];\n\n    if (globalOpts.url && url && isString(url) && url.substr(0, 1) === '.') {\n      actions[actionId] = {\n        ...actions[actionId],\n        url: `${globalOpts.url}${url.substr(1)}`\n      };\n    }\n    const actionOpts = {\n      ...globalOpts,\n      ...actions[actionId]\n    };\n    const actionName = getActionName(actionId, {\n      resourceName,\n      resourcePluralName,\n      isArray: actionOpts.isArray,\n      alias: actionOpts.alias\n    });\n    actionFuncs[actionName] = createAction(actionId, {\n      resourceName,\n      resourcePluralName,\n      scope,\n      ...actionOpts\n    });\n    return actionFuncs;\n  }, {});\n};\n\nexport {getActionName, createAction, createActions};\n"]}