{"version":3,"sources":["../../src/defaults/index.js"],"names":["defaultActions","create","method","fetch","isArray","get","update","updateMany","alias","delete","deleteMany","defaultHeaders","Accept","defaultTransformResponsePipeline","res","then","transformedResponse","body","code","status","isPartialContent","contentRange","headers","defaultState","isCreating","items","isFetching","lastUpdated","didInvalidate","item","isFetchingItem","lastUpdatedItem","didInvalidateItem","isUpdating","isDeleting","initialState","Object","keys","reduce","soFar","key","defaultGlobals","Promise"],"mappings":";;;;;;;kQAAA;;AAEA;;AACA;;AAEA,IAAMA,iBAAiB;AACrBC,UAAQ,EAACC,QAAQ,MAAT,EADa;AAErBC,SAAO,EAACD,QAAQ,KAAT,EAAgBE,SAAS,IAAzB,EAFc;AAGrBC,OAAK,EAACH,QAAQ,KAAT,EAHgB;AAIrBI,UAAQ,EAACJ,QAAQ,OAAT,EAJa;AAKrBK,cAAY,EAACL,QAAQ,OAAT,EAAkBE,SAAS,IAA3B,EAAiCI,OAAO,QAAxC,EALS;AAMrBC,UAAQ,EAACP,QAAQ,QAAT,EANa;AAOrBQ,cAAY,EAACR,QAAQ,QAAT,EAAmBE,SAAS,IAA5B,EAAkCI,OAAO,QAAzC;AAPS,CAAvB;;AAUA,IAAMG,iBAAiB;AACrBC,UAAQ,kBADa;AAErB,kBAAgB;AAFK,CAAvB;;AAKA,IAAMC,mCAAmC,CACvC;AAAA,SACE,0BAAcC,GAAd,EAAmBC,IAAnB,CAAwB,gBAAQ;AAC9B,QAAMC,sBAAsB,EAACC,UAAD,EAAOC,MAAMJ,IAAIK,MAAjB,EAA5B;AACA;AACA,QAAMC,mBAAmBN,IAAIK,MAAJ,KAAe,GAAxC;AACA,QAAIC,gBAAJ,EAAsB;AACpBJ,0BAAoBK,YAApB,GAAmC,mCAAwBP,IAAIQ,OAAJ,CAAYjB,GAAZ,CAAgB,eAAhB,CAAxB,CAAnC;AACD;AACD,WAAOW,mBAAP;AACD,GARD,CADF;AAAA,CADuC,CAAzC;;AAaA,IAAMO,eAAe;AACnBtB,UAAQ;AACNuB,gBAAY;AADN,GADW;AAInBrB,SAAO;AACLsB,WAAO,EADF;AAELC,gBAAY,KAFP;AAGLC,iBAAa,CAHR;AAILC,mBAAe;AAJV,GAJY;AAUnBvB,OAAK;AACHwB,UAAM,IADH;AAEHC,oBAAgB,KAFb;AAGHC,qBAAiB,CAHd;AAIHC,uBAAmB;AAJhB,GAVc;AAgBnB1B,UAAQ;AACN2B,gBAAY;AADN,GAhBW;AAmBnBxB,UAAQ;AACNyB,gBAAY;AADN;AAnBW,CAArB;;AAwBA,IAAMC,eAAeC,OAAOC,IAAP,CAAYd,YAAZ,EAA0Be,MAA1B,CAAiC,UAACC,KAAD,EAAQC,GAAR;AAAA,sBAAqBD,KAArB,EAA+BhB,aAAaiB,GAAb,CAA/B;AAAA,CAAjC,EAAqF,EAArF,CAArB;;AAEA,IAAMC,iBAAiB;AACrBC,kBADqB;AAErBvC;AAFqB,CAAvB;;QAKQsC,c,GAAAA,c;QAAgBzC,c,GAAAA,c;QAAgBW,c,GAAAA,c;QAAgBE,gC,GAAAA,gC;QAAkCU,Y,GAAAA,Y;QAAcY,Y,GAAAA,Y","file":"index.js","sourcesContent":["/* global fetch */\n\nimport {parseResponse} from './../helpers/fetch';\nimport {parseContentRangeHeader} from './../helpers/util';\n\nconst defaultActions = {\n  create: {method: 'POST'},\n  fetch: {method: 'GET', isArray: true},\n  get: {method: 'GET'},\n  update: {method: 'PATCH'},\n  updateMany: {method: 'PATCH', isArray: true, alias: 'update'},\n  delete: {method: 'DELETE'},\n  deleteMany: {method: 'DELETE', isArray: true, alias: 'delete'}\n};\n\nconst defaultHeaders = {\n  Accept: 'application/json',\n  'Content-Type': 'application/json'\n};\n\nconst defaultTransformResponsePipeline = [\n  res =>\n    parseResponse(res).then(body => {\n      const transformedResponse = {body, code: res.status};\n      // Add support for Content-Range parsing when a partial http code is used\n      const isPartialContent = res.status === 206;\n      if (isPartialContent) {\n        transformedResponse.contentRange = parseContentRangeHeader(res.headers.get('Content-Range'));\n      }\n      return transformedResponse;\n    })\n];\n\nconst defaultState = {\n  create: {\n    isCreating: false\n  },\n  fetch: {\n    items: [],\n    isFetching: false,\n    lastUpdated: 0,\n    didInvalidate: true\n  },\n  get: {\n    item: null,\n    isFetchingItem: false,\n    lastUpdatedItem: 0,\n    didInvalidateItem: true\n  },\n  update: {\n    isUpdating: false\n  },\n  delete: {\n    isDeleting: false\n  }\n};\n\nconst initialState = Object.keys(defaultState).reduce((soFar, key) => ({...soFar, ...defaultState[key]}), {});\n\nconst defaultGlobals = {\n  Promise,\n  fetch\n};\n\nexport {defaultGlobals, defaultActions, defaultHeaders, defaultTransformResponsePipeline, defaultState, initialState};\n"]}