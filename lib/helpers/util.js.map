{"version":3,"sources":["../../src/helpers/util.js"],"names":["includes","array","key","indexOf","isString","maybeString","isObject","maybeObject","isFunction","maybeFunction","pick","obj","keys","reduce","soFar","undefined","find","collection","query","queryKeys","Object","foundItem","some","doesMatch","item","mapObject","object","func","mergeObjects","sources","concat","Array","prototype","uniqueKeys","apply","map","filter","value","index","self","assign","source","startsWith","string","target","String","slice","length","endsWith","ucfirst","str","charAt","toUpperCase","substr","upperSnakeCase","split","letter","charCode","charCodeAt","getGerundName","name","replace","getPluralName","parseContentRangeHeader","matches","match","unit","first","last","getIdKey","action","multi"],"mappings":"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","file":"util.js","sourcesContent":["export const includes = (array, key) => array.indexOf(key) !== -1;\n\nexport const isString = maybeString => typeof maybeString === 'string';\n\nexport const isObject = maybeObject => typeof maybeObject === 'object';\n\nexport const isFunction = maybeFunction => typeof maybeFunction === 'function';\n\nexport const pick = (obj, ...keys) =>\n  keys.reduce((soFar, key) => {\n    if (includes(keys, key) && obj[key] !== undefined) {\n      soFar[key] = obj[key]; // eslint-disable-line no-param-reassign\n    }\n    return soFar;\n  }, {});\n\nexport const find = (collection, query) => {\n  const queryKeys = Object.keys(query);\n  let foundItem;\n  collection.some(item => {\n    const doesMatch = !queryKeys.some(key => item[key] !== query[key]);\n    if (doesMatch) {\n      foundItem = item;\n    }\n    return doesMatch;\n  });\n  return foundItem;\n};\n\nexport const mapObject = (object, func) =>\n  Object.keys(object).reduce((soFar, key) => {\n    soFar[key] = func(object[key]); // eslint-disable-line no-param-reassign\n    return soFar;\n  }, {});\n\nexport const mergeObjects = (object, ...sources) => {\n  const {concat} = Array.prototype;\n  const uniqueKeys = concat\n    .apply(Object.keys(object), sources.map(Object.keys))\n    .filter((value, index, self) => self.indexOf(value) === index);\n  return uniqueKeys.reduce((soFar, key) => {\n    soFar[key] = Object.assign(soFar[key] || {}, ...sources.map(source => source[key] || {})); // eslint-disable-line no-param-reassign\n    return soFar;\n  }, object);\n};\n\nexport const startsWith = (string, target) => String(string).slice(0, target.length) === target;\n\nexport const endsWith = (string, target) => String(string).slice(string.length - target.length) === target;\n\nexport const ucfirst = str => str.charAt(0).toUpperCase() + str.substr(1);\n\nexport const upperSnakeCase = string =>\n  String(\n    string.split('').reduce((soFar, letter, index) => {\n      const charCode = letter.charCodeAt(0);\n      return soFar + (index && charCode < 97 ? `_${letter}` : letter).toUpperCase();\n    }, '')\n  );\n\nexport const getGerundName = name => `${name.replace(/e$/, '')}ing`;\n\nexport const getPluralName = (name = '') => (name.endsWith('s') ? name : `${name}s`);\n\nexport const parseContentRangeHeader = string => {\n  if (typeof string === 'string') {\n    const matches = string.match(/^(\\w+) (\\d+)-(\\d+)\\/(\\d+|\\*)/);\n\n    if (matches) {\n      return {\n        unit: matches[1],\n        first: +matches[2],\n        last: +matches[3],\n        length: matches[4] === '*' ? null : +matches[4]\n      };\n    }\n  }\n  return null;\n};\n\nexport const getIdKey = (action, {multi = false}) => (multi ? 'ids' : 'id');\n"]}