{"version":3,"sources":["../../src/reducers/index.js"],"names":["getUpdateArrayData","action","itemId","actionOpts","options","idKey","multi","assignResponse","body","Object","keys","context","reduce","soFar","key","defaultReducers","create","state","status","isCreating","items","fetch","isFetching","didInvalidate","isPartialContent","code","contentRange","first","concat","slice","last","i","newItem","push","lastUpdated","receivedAt","get","isFetchingItem","didInvalidateItem","item","update","updatedItems","listItemIndex","findIndex","el","splice","lastUpdatedItem","isUpdating","id","updatedItem","updateMany","isUpdatingMany","idKeyMulti","query","ids","map","includes","delete","isDeleting","filter","deleteMany","isDeletingMany","createReducer","actionId","resourceName","resourcePluralName","isPure","Error","gerundName","gerundStateKey","createReducers","actions","globalOpts","actionKeys","actionReducers","reducerKey","toLowerCase","createRootReducer","reducers","scope","scopeNamespace","rootReducer","initialState","String","type","startsWith","substr","length"],"mappings":";;;;;;;;;AAAA;;AACA;;AACA;;;;;;;;AAEA,IAAMA,qBAAqB,SAArBA,kBAAqB,CAACC,MAAD,EAASC,MAAT,EAAoB;AAC7C,MAAMC,aAAaF,OAAOG,OAAP,IAAkB,EAArC;AACA,MAAMC,QAAQ,oBAASJ,MAAT,EAAiB,EAACK,OAAO,KAAR,EAAjB,CAAd;;AAEA,SAAOH,WAAWI,cAAX,GACH,gBAAKN,OAAOO,IAAZ,sBACGH,KADH,EACWH,MADX,EADG,GAIHO,OAAOC,IAAP,CAAYT,OAAOU,OAAnB,EAA4BC,MAA5B,CAAmC,UAACC,KAAD,EAAQC,GAAR,EAAgB;AACjD,QAAIA,QAAQ,KAAZ,EAAmB;AACjBD,YAAMC,GAAN,IAAab,OAAOU,OAAP,CAAeG,GAAf,CAAb;AACD;AACD,WAAOD,KAAP;AACD,GALD,EAKG,EALH,CAJJ;AAUD,CAdD;;AAgBA,IAAME,kBAAkB;AACtBC,UAAQ,gBAACC,KAAD,EAAQhB,MAAR,EAAmB;AACzB,YAAQA,OAAOiB,MAAf;AACE,WAAK,SAAL;AACE;AACA,4BACKD,KADL;AAEEE,sBAAY;AACZ;AACA;AACA;AACA;AANF;AAQF,WAAK,UAAL;AACE;AACA,4BACKF,KADL;AAEEE,sBAAY,KAFd;AAGEC,8CAAYH,MAAMG,KAAN,IAAe,EAA3B,IAAgCnB,OAAOO,IAAvC;AAHF;AAKF,WAAK,UAAL;AACE,4BACKS,KADL;AAEEE,sBAAY;AAFd;AAIF;AACE,eAAOF,KAAP;AAxBJ;AA0BD,GA5BqB;AA6BtBI,SAAO,eAACJ,KAAD,EAAQhB,MAAR,EAAmB;AACxB,YAAQA,OAAOiB,MAAf;AACE,WAAK,SAAL;AACE,4BACKD,KADL;AAEEK,sBAAY,IAFd;AAGEC,yBAAe;AAHjB;AAKF,WAAK,UAAL;AAAiB;AACf,cAAMC,mBAAmBvB,OAAOwB,IAAP,KAAgB,GAAzC;AACA,cAAIL,QAAQ,EAAZ;AACA,cAAII,oBAAoBvB,OAAOyB,YAA/B,EAA6C;AAAA,gBACpCA,YADoC,GACpBzB,MADoB,CACpCyB,YADoC;;AAE3C,gBAAIA,aAAaC,KAAb,GAAqB,CAAzB,EAA4B;AAC1BP,sBAAQA,MAAMQ,MAAN,CAAaX,MAAMG,KAAN,CAAYS,KAAZ,CAAkB,CAAlB,EAAqBH,aAAaI,IAAlC,CAAb,CAAR;AACD;AACD,iBAAK,IAAIC,IAAIL,aAAaC,KAA1B,EAAiCI,KAAKL,aAAaI,IAAnD,EAAyDC,KAAK,CAA9D,EAAiE;AAC/D,kBAAMC,UAAU/B,OAAOO,IAAP,CAAYuB,IAAIL,aAAaC,KAA7B,CAAhB;AACA,kBAAIK,WAAW,IAAf,EAAqB;AACnBZ,sBAAMa,IAAN,CAAWD,OAAX;AACD;AACF;AACF,WAXD,MAWO;AACLZ,oBAAQA,MAAMQ,MAAN,CAAa3B,OAAOO,IAApB,CAAR;AACD;;AAED,8BACKS,KADL;AAEEK,wBAAY,KAFd;AAGEC,2BAAe,KAHjB;AAIEH,wBAJF;AAKEc,yBAAajC,OAAOkC;AALtB;AAOD;AACD,WAAK,UAAL;AACE,4BACKlB,KADL;AAEEK,sBAAY,KAFd;AAGEC,yBAAe;AAHjB;AAKF;AACE,eAAON,KAAP;AAxCJ;AA0CD,GAxEqB;AAyEtBmB,OAAK,aAACnB,KAAD,EAAQhB,MAAR,EAAmB;AACtB,YAAQA,OAAOiB,MAAf;AACE,WAAK,SAAL;AACE,4BACKD,KADL;AAEEoB,0BAAgB,IAFlB;AAGEC,6BAAmB;AAHrB;AAKF,WAAK,UAAL;AAAiB;AACf,cAAMnC,aAAaF,OAAOG,OAAP,IAAkB,EAArC;AACA,cAAMC,QAAQ,oBAASJ,MAAT,EAAiB,EAACK,OAAO,KAAR,EAAjB,CAAd;AACA,cAAMiC,OAAOtC,OAAOO,IAApB;AACA,cAAMgC,SAAS,EAAf;AACA,cAAIrC,WAAWI,cAAf,EAA+B;AAC7B,gBAAMkC,eAAexB,MAAMG,KAA3B;AACA,gBAAMsB,gBAAgBD,aAAaE,SAAb,CAAuB;AAAA,qBAAMC,GAAGvC,KAAH,MAAckC,KAAKlC,KAAL,CAApB;AAAA,aAAvB,CAAtB;AACA,gBAAIqC,kBAAkB,CAAC,CAAvB,EAA0B;AACxBD,2BAAaI,MAAb,CAAoBH,aAApB,EAAmC,CAAnC,EAAsCH,IAAtC;AACAC,qBAAOpB,KAAP,GAAeqB,aAAaZ,KAAb,EAAf;AACD;AACF;AACD,8BACKZ,KADL;AAEEoB,4BAAgB,KAFlB;AAGEC,+BAAmB,KAHrB;AAIEQ,6BAAiB7C,OAAOkC,UAJ1B;AAKEI;AALF,aAMKC,MANL;AAQD;AACD,WAAK,UAAL;AACE,4BACKvB,KADL;AAEEoB,0BAAgB,KAFlB;AAGEC,6BAAmB;AAHrB;AAKF;AACE,eAAOrB,KAAP;AApCJ;AAsCD,GAhHqB;AAiHtBuB,UAAQ,gBAACvB,KAAD,EAAQhB,MAAR,EAAmB;AACzB,YAAQA,OAAOiB,MAAf;AACE,WAAK,SAAL;AACE;AACA,4BACKD,KADL;AAEE8B,sBAAY;AAFd;AAIF,WAAK,UAAL;AAAiB;AACf;AACA,cAAM1C,QAAQ,oBAASJ,MAAT,EAAiB,EAACK,OAAO,KAAR,EAAjB,CAAd;AACA,cAAM0C,KAAK,oBAAS/C,OAAOU,OAAhB,IAA2BV,OAAOU,OAAP,CAAeN,KAAf,CAA3B,GAAmDJ,OAAOU,OAArE;AACA,cAAMR,aAAaF,OAAOG,OAAP,IAAkB,EAArC;AACA,cAAMoC,SAASrC,WAAWI,cAAX,GAA4BN,OAAOO,IAAnC,GAA0CP,OAAOU,OAAhE;AACA,cAAM+B,gBAAgBzB,MAAMG,KAAN,CAAYuB,SAAZ,CAAsB;AAAA,mBAAMC,GAAGvC,KAAH,MAAc2C,EAApB;AAAA,WAAtB,CAAtB;AACA,cAAMP,eAAexB,MAAMG,KAAN,CAAYS,KAAZ,EAArB;AACA,cAAIa,kBAAkB,CAAC,CAAvB,EAA0B;AACxBD,yBAAaC,aAAb,iBACKD,aAAaC,aAAb,CADL,EAEKF,MAFL;AAID;AACD,cAAMS,cACJhC,MAAMsB,IAAN,IAActB,MAAMsB,IAAN,CAAWlC,KAAX,MAAsB2C,EAApC,gBAES/B,MAAMsB,IAFf,EAGSC,MAHT,IAKIvB,MAAMsB,IANZ;AAOA,8BACKtB,KADL;AAEE8B,wBAAY,KAFd;AAGE3B,mBAAOqB,YAHT;AAIEF,kBAAMU;AAJR;AAMD;AACD,WAAK,UAAL;AACE,4BACKhC,KADL;AAEE8B,sBAAY;AAFd;AAIF;AACE,eAAO9B,KAAP;AAzCJ;AA2CD,GA7JqB;AA8JtBiC,cAAY,oBAACjC,KAAD,EAAQhB,MAAR,EAAmB;AAC7B,YAAQA,OAAOiB,MAAf;AACE,WAAK,SAAL;AACE;AACA,4BACKD,KADL;AAEEkC,0BAAgB;AAFlB;AAIF,WAAK,UAAL;AAAiB;AACf;AACA,cAAMhD,aAAaF,OAAOG,OAAP,IAAkB,EAArC;AACA,cAAMC,QAAQ,oBAASJ,MAAT,EAAiB,EAACK,OAAO,KAAR,EAAjB,CAAd;AACA,cAAM8C,aAAa,oBAASnD,MAAT,EAAiB,EAACK,OAAO,IAAR,EAAjB,CAAnB;;AAJe,qBAKaH,WAAWkD,KAAX,IAAoBpD,OAAOU,OALxC;AAAA,cAKM2C,GALN,QAKPF,UALO;;AAOf,cAAMX,eAAexB,MAAMG,KAAN,CAAYmC,GAAZ,CAAgB,gBAAQ;AAC3C,gBAAI,CAACD,GAAD,IAAQA,IAAIE,QAAJ,CAAajB,KAAKlC,KAAL,CAAb,CAAZ,EAAuC;AACrC,kBAAM4C,eAAcjD,mBAAmBC,MAAnB,EAA2BsC,KAAKlC,KAAL,CAA3B,CAApB;AACA,qBAAO4C,4BAEEV,IAFF,EAGEU,YAHF,IAKHV,IALJ;AAMD;AACD,mBAAOA,IAAP;AACD,WAXoB,CAArB;AAYA;AACA,cAAMU,cACJhC,MAAMsB,IAAN,KAAe,CAACe,GAAD,IAAQA,IAAIE,QAAJ,CAAavC,MAAMsB,IAAN,CAAWlC,KAAX,CAAb,CAAvB,iBAESY,MAAMsB,IAFf,EAGSvC,mBAAmBC,MAAnB,EAA2BgB,MAAMsB,IAAN,CAAWlC,KAAX,CAA3B,CAHT,IAKIY,MAAMsB,IANZ;AAOA,8BACKtB,KADL;AAEEkC,4BAAgB,KAFlB;AAGE/B,mBAAOqB,YAHT;AAIEF,kBAAMU;AAJR;AAMD;AACD,WAAK,UAAL;AACE,4BACKhC,KADL;AAEEkC,0BAAgB;AAFlB;AAIF;AACE,eAAOlC,KAAP;AA/CJ;AAiDD,GAhNqB;AAiNtBwC,UAAQ,iBAACxC,KAAD,EAAQhB,MAAR,EAAmB;AACzB,YAAQA,OAAOiB,MAAf;AACE,WAAK,SAAL;AACE;AACA,4BACKD,KADL;AAEEyC,sBAAY;AAFd;AAIF,WAAK,UAAL;AAAiB;AACf,YAAMrD,QAAQ,oBAASJ,MAAT,EAAiB,EAACK,OAAO,KAAR,EAAjB,CAAd;AACA,YAAM0C,KAAK/C,OAAOU,OAAP,CAAeN,KAAf,KAAyBJ,OAAOU,OAA3C;AACA,4BACKM,KADL;AAEEyC,sBAAY,KAFd;AAGEtC,8CAAWH,MAAMG,KAAN,CAAYuC,MAAZ,CAAmB;AAAA,mBAAMf,GAAGvC,KAAH,MAAc2C,EAApB;AAAA,WAAnB,CAAX;AAHF;AAKF,WAAK,UAAL;AACE,4BACK/B,KADL;AAEEyC,sBAAY;AAFd;AAIF;AACE,eAAOzC,KAAP;AArBJ;AAuBD,GAzOqB;AA0OtB2C,cAAY,oBAAC3C,KAAD,EAAQhB,MAAR,EAAmB;AAC7B,YAAQA,OAAOiB,MAAf;AACE,WAAK,SAAL;AACE;AACA,4BACKD,KADL;AAEE4C,0BAAgB;AAFlB;AAIF,WAAK,UAAL;AAAiB;AACf,YAAM1D,aAAaF,OAAOG,OAAP,IAAkB,EAArC;AACA,YAAMC,QAAQ,oBAASJ,MAAT,EAAiB,EAACK,OAAO,KAAR,EAAjB,CAAd;AACA,YAAM8C,aAAa,oBAASnD,MAAT,EAAiB,EAACK,OAAO,IAAR,EAAjB,CAAnB;;AAHF,oBAI8BH,WAAWkD,KAAX,IAAoBpD,OAAOU,OAJzD;AAAA,YAIuB2C,GAJvB,SAIUF,UAJV;;AAME,YAAI,CAACE,GAAL,EAAU;AACR,8BACKrC,KADL;AAEE4C,4BAAgB,KAFlB;AAGEzC,mBAAO,EAHT;AAIEmB,kBAAM;AAJR;AAMD;AACD,4BACKtB,KADL;AAEE4C,0BAAgB,KAFlB;AAGEzC,8CAAWH,MAAMG,KAAN,CAAYuC,MAAZ,CAAmB;AAAA,mBAAM,CAACL,IAAIE,QAAJ,CAAaZ,GAAGvC,KAAH,CAAb,CAAP;AAAA,WAAnB,CAAX,EAHF;AAIEkC,gBAAMe,IAAIE,QAAJ,CAAavC,MAAMsB,IAAN,CAAWlC,KAAX,CAAb,IAAkC,IAAlC,GAAyCY,MAAMsB;AAJvD;AAMF,WAAK,UAAL;AACE,4BACKtB,KADL;AAEE4C,0BAAgB;AAFlB;AAIF;AACE,eAAO5C,KAAP;AAjCJ;AAmCD;AA9QqB,CAAxB;;AAiRA,IAAM6C,gBAAgB,SAAhBA,aAAgB,CAACC,QAAD,SAAsF;AAAA,MAA1EC,YAA0E,SAA1EA,YAA0E;AAAA,oCAA5DC,kBAA4D;AAAA,MAA5DA,kBAA4D,yCAApCD,YAAoC;AAAA,MAAhB7D,UAAgB;;AAC1G;AACA,MAAIA,WAAWS,MAAX,IAAqB,sBAAWT,WAAWS,MAAtB,CAAzB,EAAwD;AACtD,WAAOT,WAAWS,MAAlB;AACD;AACD;AACA,MAAIT,WAAW+D,MAAf,EAAuB;AACrB,UAAM,IAAIC,KAAJ,+CAAyDJ,QAAzD,OAAN;AACD;AACD;AACA,MAAIhD,gBAAgBgD,QAAhB,CAAJ,EAA+B;AAC7B,WAAOhD,gBAAgBgD,QAAhB,CAAP;AACD;AACD;AACA,MAAMK,aAAajE,WAAWiE,UAAX,IAAyB,yBAAcL,QAAd,CAA5C;AACA,MAAMM,wBAAsB,mBAAQD,UAAR,CAA5B;AACA,SAAO,UAACnD,KAAD,EAAQhB,MAAR,EAAmB;AACxB,YAAQA,OAAOiB,MAAf;AACE,WAAK,SAAL;AACE;AACA,4BACKD,KADL,sBAEGoD,cAFH,EAEoB,IAFpB;AAIF,WAAK,UAAL;AAAiB;AACf,4BACKpD,KADL,sBAEGoD,cAFH,EAEoB,KAFpB;AAIF,WAAK,UAAL;AACE,4BACKpD,KADL,sBAEGoD,cAFH,EAEoB,KAFpB;AAIF;AACE,eAAOpD,KAAP;AAlBJ;AAoBD,GArBD;AAsBD,CAtCD;;AAwCA,IAAMqD,iBAAiB,SAAjBA,cAAiB,GAA0E;AAAA,MAAzEC,OAAyE,uEAA/D,EAA+D;;AAAA,kFAAP,EAAO;;AAAA,MAA1DP,YAA0D,SAA1DA,YAA0D;AAAA,MAA5CC,kBAA4C,SAA5CA,kBAA4C;AAAA,MAArBO,UAAqB;;AAC/F,MAAMC,aAAahE,OAAOC,IAAP,CAAY6D,OAAZ,CAAnB;AACA,SAAOE,WAAW7D,MAAX,CAAkB,UAAC8D,cAAD,EAAiBX,QAAjB,EAA8B;AACrD,QAAM5D,0BACDqE,UADC,EAEDD,QAAQR,QAAR,CAFC,CAAN;AAIA,QAAMY,aAAa,0BAAcZ,QAAd,EAAwBa,WAAxB,EAAnB;AACAF,mBAAeC,UAAf,IAA6Bb,cAAcC,QAAd;AAC3BC,gCAD2B;AAE3BC;AAF2B,OAGxB9D,UAHwB,EAA7B;AAKA,WAAOuE,cAAP;AACD,GAZM,EAYJ,EAZI,CAAP;AAaD,CAfD;;AAiBA,IAAMG,oBAAoB,SAApBA,iBAAoB,GAGrB;AAAA,MAFHC,QAEG,uEAFQ,EAER;;AAAA,kFADsF,EACtF;;AAAA,MADFd,YACE,SADFA,YACE;AAAA,MADYC,kBACZ,SADYA,kBACZ;AAAA,0BADgCc,KAChC;AAAA,MADgCA,KAChC,+BADwC,0BAAcf,YAAd,CACxC;AAAA,MADwEQ,UACxE;;AACH,MAAMQ,iBAAiBD,QAAWA,KAAX,SAAsB,EAA7C;AACA,MAAME,cAAc,SAAdA,WAAc,GAKf;AAAA,QAJHhE,KAIG,oFAHEiE,sBAGF;AAAA,QADHjF,MACG;;AACH;AACA,QAAI+E,kBAAkB,CAACG,OAAOlF,OAAOmF,IAAd,EAAoBC,UAApB,CAA+BL,cAA/B,CAAvB,EAAuE;AACrE,aAAO/D,KAAP;AACD;AACD;AACA,QAAMmE,OAAOnF,OAAOmF,IAAP,CAAYE,MAAZ,CAAmBN,eAAeO,MAAlC,EAA0CX,WAA1C,EAAb;AACA;AACA,QAAIE,SAASM,IAAT,CAAJ,EAAoB;AAClB,aAAON,SAASM,IAAT,EAAenE,KAAf,EAAsBhB,MAAtB,CAAP;AACD;AACD,WAAOgB,KAAP;AACD,GAjBD;AAkBA,SAAOgE,WAAP;AACD,CAxBD;;QA0BQC,Y,GAAAA,sB;QAAcnE,e,GAAAA,e;QAAiB+C,a,GAAAA,a;QAAeQ,c,GAAAA,c;QAAgBO,iB,GAAAA,iB","file":"index.js","sourcesContent":["import {initialState} from './../defaults';\nimport {getTypesScope, getActionType} from './../types';\nimport {find, getGerundName, getIdKey, isFunction, isObject, ucfirst} from './../helpers/util';\n\nconst getUpdateArrayData = (action, itemId) => {\n  const actionOpts = action.options || {};\n  const idKey = getIdKey(action, {multi: false});\n\n  return actionOpts.assignResponse\n    ? find(action.body, {\n        [idKey]: itemId\n      })\n    : Object.keys(action.context).reduce((soFar, key) => {\n        if (key !== 'ids') {\n          soFar[key] = action.context[key];\n        }\n        return soFar;\n      }, {});\n};\n\nconst defaultReducers = {\n  create: (state, action) => {\n    switch (action.status) {\n      case 'pending':\n        // Add object to store as soon as possible?\n        return {\n          ...state,\n          isCreating: true\n          // items: [{\n          //   id: state.items.reduce((maxId, obj) => Math.max(obj.id, maxId), -1) + 1,\n          //   ...action.context\n          // }, ...state.items]\n        };\n      case 'resolved':\n        // Assign returned object\n        return {\n          ...state,\n          isCreating: false,\n          items: [...(state.items || []), action.body]\n        };\n      case 'rejected':\n        return {\n          ...state,\n          isCreating: false\n        };\n      default:\n        return state;\n    }\n  },\n  fetch: (state, action) => {\n    switch (action.status) {\n      case 'pending':\n        return {\n          ...state,\n          isFetching: true,\n          didInvalidate: false\n        };\n      case 'resolved': {\n        const isPartialContent = action.code === 206;\n        let items = [];\n        if (isPartialContent && action.contentRange) {\n          const {contentRange} = action;\n          if (contentRange.first > 0) {\n            items = items.concat(state.items.slice(0, contentRange.last));\n          }\n          for (let i = contentRange.first; i <= contentRange.last; i += 1) {\n            const newItem = action.body[i - contentRange.first];\n            if (newItem != null) {\n              items.push(newItem);\n            }\n          }\n        } else {\n          items = items.concat(action.body);\n        }\n\n        return {\n          ...state,\n          isFetching: false,\n          didInvalidate: false,\n          items,\n          lastUpdated: action.receivedAt\n        };\n      }\n      case 'rejected':\n        return {\n          ...state,\n          isFetching: false,\n          didInvalidate: false\n        };\n      default:\n        return state;\n    }\n  },\n  get: (state, action) => {\n    switch (action.status) {\n      case 'pending':\n        return {\n          ...state,\n          isFetchingItem: true,\n          didInvalidateItem: false\n        };\n      case 'resolved': {\n        const actionOpts = action.options || {};\n        const idKey = getIdKey(action, {multi: false});\n        const item = action.body;\n        const update = {};\n        if (actionOpts.assignResponse) {\n          const updatedItems = state.items;\n          const listItemIndex = updatedItems.findIndex(el => el[idKey] === item[idKey]);\n          if (listItemIndex !== -1) {\n            updatedItems.splice(listItemIndex, 1, item);\n            update.items = updatedItems.slice();\n          }\n        }\n        return {\n          ...state,\n          isFetchingItem: false,\n          didInvalidateItem: false,\n          lastUpdatedItem: action.receivedAt,\n          item,\n          ...update\n        };\n      }\n      case 'rejected':\n        return {\n          ...state,\n          isFetchingItem: false,\n          didInvalidateItem: false\n        };\n      default:\n        return state;\n    }\n  },\n  update: (state, action) => {\n    switch (action.status) {\n      case 'pending':\n        // Update object in store as soon as possible?\n        return {\n          ...state,\n          isUpdating: true\n        };\n      case 'resolved': {\n        // Assign context or returned object\n        const idKey = getIdKey(action, {multi: false});\n        const id = isObject(action.context) ? action.context[idKey] : action.context;\n        const actionOpts = action.options || {};\n        const update = actionOpts.assignResponse ? action.body : action.context;\n        const listItemIndex = state.items.findIndex(el => el[idKey] === id);\n        const updatedItems = state.items.slice();\n        if (listItemIndex !== -1) {\n          updatedItems[listItemIndex] = {\n            ...updatedItems[listItemIndex],\n            ...update\n          };\n        }\n        const updatedItem =\n          state.item && state.item[idKey] === id\n            ? {\n                ...state.item,\n                ...update\n              }\n            : state.item;\n        return {\n          ...state,\n          isUpdating: false,\n          items: updatedItems,\n          item: updatedItem\n        };\n      }\n      case 'rejected':\n        return {\n          ...state,\n          isUpdating: false\n        };\n      default:\n        return state;\n    }\n  },\n  updateMany: (state, action) => {\n    switch (action.status) {\n      case 'pending':\n        // Update object in store as soon as possible?\n        return {\n          ...state,\n          isUpdatingMany: true\n        };\n      case 'resolved': {\n        // Assign context or returned object\n        const actionOpts = action.options || {};\n        const idKey = getIdKey(action, {multi: false});\n        const idKeyMulti = getIdKey(action, {multi: true});\n        const {[idKeyMulti]: ids} = actionOpts.query || action.context;\n\n        const updatedItems = state.items.map(item => {\n          if (!ids || ids.includes(item[idKey])) {\n            const updatedItem = getUpdateArrayData(action, item[idKey]);\n            return updatedItem\n              ? {\n                  ...item,\n                  ...updatedItem\n                }\n              : item;\n          }\n          return item;\n        });\n        // Also impact state.item? (@TODO opt-in/defautl?)\n        const updatedItem =\n          state.item && (!ids || ids.includes(state.item[idKey]))\n            ? {\n                ...state.item,\n                ...getUpdateArrayData(action, state.item[idKey])\n              }\n            : state.item;\n        return {\n          ...state,\n          isUpdatingMany: false,\n          items: updatedItems,\n          item: updatedItem\n        };\n      }\n      case 'rejected':\n        return {\n          ...state,\n          isUpdatingMany: false\n        };\n      default:\n        return state;\n    }\n  },\n  delete: (state, action) => {\n    switch (action.status) {\n      case 'pending':\n        // Update object in store as soon as possible?\n        return {\n          ...state,\n          isDeleting: true\n        };\n      case 'resolved': // eslint-disable-line\n        const idKey = getIdKey(action, {multi: false});\n        const id = action.context[idKey] || action.context;\n        return {\n          ...state,\n          isDeleting: false,\n          items: [...state.items.filter(el => el[idKey] !== id)]\n        };\n      case 'rejected':\n        return {\n          ...state,\n          isDeleting: false\n        };\n      default:\n        return state;\n    }\n  },\n  deleteMany: (state, action) => {\n    switch (action.status) {\n      case 'pending':\n        // Update object in store as soon as possible?\n        return {\n          ...state,\n          isDeletingMany: true\n        };\n      case 'resolved': // eslint-disable-line\n        const actionOpts = action.options || {};\n        const idKey = getIdKey(action, {multi: false});\n        const idKeyMulti = getIdKey(action, {multi: true});\n        const {[idKeyMulti]: ids} = actionOpts.query || action.context;\n\n        if (!ids) {\n          return {\n            ...state,\n            isDeletingMany: false,\n            items: [],\n            item: null\n          };\n        }\n        return {\n          ...state,\n          isDeletingMany: false,\n          items: [...state.items.filter(el => !ids.includes(el[idKey]))],\n          item: ids.includes(state.item[idKey]) ? null : state.item\n        };\n      case 'rejected':\n        return {\n          ...state,\n          isDeletingMany: false\n        };\n      default:\n        return state;\n    }\n  }\n};\n\nconst createReducer = (actionId, {resourceName, resourcePluralName = `${resourceName}s`, ...actionOpts}) => {\n  // Custom reducers\n  if (actionOpts.reduce && isFunction(actionOpts.reduce)) {\n    return actionOpts.reduce;\n  }\n  // Do require a custom reduce function for pure actions\n  if (actionOpts.isPure) {\n    throw new Error(`Missing \\`reduce\\` option for pure action \\`${actionId}\\``);\n  }\n  // Default reducers\n  if (defaultReducers[actionId]) {\n    return defaultReducers[actionId];\n  }\n  // Custom actions\n  const gerundName = actionOpts.gerundName || getGerundName(actionId);\n  const gerundStateKey = `is${ucfirst(gerundName)}`;\n  return (state, action) => {\n    switch (action.status) {\n      case 'pending':\n        // Update object in store as soon as possible?\n        return {\n          ...state,\n          [gerundStateKey]: true\n        };\n      case 'resolved': // eslint-disable-line\n        return {\n          ...state,\n          [gerundStateKey]: false\n        };\n      case 'rejected':\n        return {\n          ...state,\n          [gerundStateKey]: false\n        };\n      default:\n        return state;\n    }\n  };\n};\n\nconst createReducers = (actions = {}, {resourceName, resourcePluralName, ...globalOpts} = {}) => {\n  const actionKeys = Object.keys(actions);\n  return actionKeys.reduce((actionReducers, actionId) => {\n    const actionOpts = {\n      ...globalOpts,\n      ...actions[actionId]\n    };\n    const reducerKey = getActionType(actionId).toLowerCase();\n    actionReducers[reducerKey] = createReducer(actionId, {\n      resourceName,\n      resourcePluralName,\n      ...actionOpts\n    });\n    return actionReducers;\n  }, {});\n};\n\nconst createRootReducer = (\n  reducers = {},\n  {resourceName, resourcePluralName, scope = getTypesScope(resourceName), ...globalOpts} = {}\n) => {\n  const scopeNamespace = scope ? `${scope}/` : '';\n  const rootReducer = (\n    state = {\n      ...initialState\n    },\n    action\n  ) => {\n    // Only process relevant namespace\n    if (scopeNamespace && !String(action.type).startsWith(scopeNamespace)) {\n      return state;\n    }\n    // Only process relevant action type\n    const type = action.type.substr(scopeNamespace.length).toLowerCase();\n    // Check for a matching reducer\n    if (reducers[type]) {\n      return reducers[type](state, action);\n    }\n    return state;\n  };\n  return rootReducer;\n};\n\nexport {initialState, defaultReducers, createReducer, createReducers, createRootReducer};\n"]}